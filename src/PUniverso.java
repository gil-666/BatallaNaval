
import java.awt.Color;
import java.awt.Graphics;
import java.awt.List;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 *
 * @author gil
 */
public class PUniverso extends javax.swing.JPanel {

    private static final int GRID_SIZE = 10;

    
    private static final int CELL_SIZE = 20;
    int limit = 5;//limite de 5 barcos 

    /**
     * Creates new form PUniverso
     */
    public PUniverso() {
        initComponents();
    }

    public int getLimit() {
        return limit;
    }

    public void setLimit(int limit) {
        this.limit = limit;
    }
public static int getGRID_SIZE() {
        return GRID_SIZE;
    }
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);

        int panelWidth = getWidth();
        int panelHeight = getHeight();

        // Calculate the cell size to fit the grid within the panel
        int cellWidth = panelWidth / GRID_SIZE;
        int cellHeight = panelHeight / GRID_SIZE;

        // Draw vertical lines
        for (int i = 0; i <= GRID_SIZE; i++) {
            int x = i * cellWidth;
            g.drawLine(x, 0, x, panelHeight);
        }
        
        //dibujar numeros horizontal arriba
        for (int i = 0; i <= GRID_SIZE; i++) {
            int x = i * cellWidth + cellWidth /2;
            int y = 10;
            g.setColor(Color.white);
            g.drawString(""+(i+1), x, y);
        }
        
        //dibujar letras en y
        char[] alphabet = "abcdefghijklmnopqrstuvwxyz".toUpperCase().toCharArray();
        for (int i = 0; i <= GRID_SIZE; i++) {
            int x = 1;
            int y = i * cellHeight + cellHeight - 10 ;
            char letra = alphabet[i];
            g.setColor(Color.white);
            g.drawString(""+letra, x, y);
        }

        // Draw horizontal lines
        for (int i = 0; i <= GRID_SIZE; i++) {
            int y = i * cellHeight;
            g.setColor(Color.black);
            g.drawLine(0, y, panelWidth, y);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(0, 51, 204));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 768, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

//        if (limit > 0) {
//            Barco nave = new Barco(evt.getX() - 25, evt.getY() - 15);
//            this.add(nave);
//            nave.setVisible(true);
//            repaint();
//            limit--;
//        }
        if (limit > 0) {
            int cellWidth = getWidth() / GRID_SIZE;
            int cellHeight = getHeight() / GRID_SIZE;

            int x = evt.getX() / cellWidth * cellWidth;
            int y = evt.getY() / cellHeight * cellHeight;

            Barco nave = new Barco(x, y);
            this.add(nave);
            nave.setVisible(true);
            repaint();
            limit--;
        }
    }//GEN-LAST:event_formMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
